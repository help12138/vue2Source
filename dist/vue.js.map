{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 开始标签名匹配规则\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)   // 匹配的是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// 对模板进行编译处理\r\nfunction parseHTML(html){\r\n\r\n    const ElEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []  // 用于存放元素\r\n    let currentParent  // 指向的是栈中的最后一个\r\n    let root\r\n\r\n    // 最终需要转化成一个抽象语法树\r\n    function createASTElement(tag, attrs){\r\n        return {\r\n            tag,\r\n            type:ElEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs){\r\n        let node = createASTElement(tag, attrs)\r\n        if(!root){  // 看一下是否是空树\r\n            root = node\r\n        }\r\n        if(currentParent){\r\n            node.parent = currentParent  // 只赋予了parent属性\r\n            currentParent.children.push(node)  // 还需要让父亲记住自己\r\n        }\r\n        stack.push(node)\r\n        currentParent = node  // 指针是栈中最后一个\r\n    }\r\n    function chars(text){\r\n        text = text.replace(/\\s/g, '')\r\n        // 文本直接放到当前节点中\r\n        text && currentParent.children.push({\r\n            type:TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end(tag){\r\n        // 弹出最后一个\r\n        stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    \r\n    function advance(n){\r\n        // 截取标签后续内容\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag(){\r\n        // 处理开头标签\r\n        const start = html.match(startTagOpen)\r\n        if(start){\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs:[]\r\n            }\r\n            advance(start[0].length)\r\n            let attr, end\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n                // 如果不是结束标签就一直匹配下去\r\n                advance(attr[0].length)\r\n                match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5] || true})\r\n            }\r\n            if(end){\r\n                advance(end[0].length)\r\n            }\r\n            // console.log(match)\r\n            return match\r\n            \r\n        }\r\n\r\n        return false // 不是开始标签\r\n    }\r\n    while(html){\r\n        let textEnd = html.indexOf('<')  // 如果indexOf的索引是0, 则说明是个标签\r\n        if(textEnd == 0){\r\n            const startTagMatch = parseStartTag()  // 开始标签的匹配\r\n\r\n            if(startTagMatch){  // 解析到开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n\r\n            let endTagMatch =  html.match(endTag)\r\n            if(endTagMatch){\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length)\r\n                continue\r\n            }\r\n        }\r\n        if(textEnd > 0){\r\n            // 如果大于0,那就说明是文本\r\n            let text = html.substring(0, textEnd)\r\n            // console.log(html)\r\n            if(text){\r\n                chars(text)\r\n                advance(text.length)  // 解析文本\r\n            }\r\n        }\r\n    }\r\n    console.log(root)\r\n}\r\n\r\nexport function compileToFunction(template){\r\n    // 1. 将template转化成ast语法树\r\n    let ast = parseHTML(template)\r\n\r\n    // 2. 生成render方法(render方法执行后的返回结果就是虚拟DOM)\r\n    console.log(template)\r\n}","// 重写数组的部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 数组的原型\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [// 所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'unshift',\r\n    'shift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method =>{\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function(...args){  // 重写了数组的方法\r\n        const result = oldArrayProto[method].call(this, ...args)  // 内部调用原来的方法， 函数的劫持\r\n\r\n        let inserted;\r\n        let ob = this.__ob__\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break\r\n        }\r\n        \r\n        if(inserted){\r\n            // 对新增的内容再次劫持\r\n            // 由于onserveArray是Observer类的内部函数。所以需要将数据绑定到实例的自定义方法上\r\n            ob.observerArray(inserted)\r\n        }\r\n\r\n        return result\r\n    }\r\n})","/**\r\n * 对象数据劫持方法\r\n */\r\n\r\nimport { newArrayProto } from \"./array\";\r\n\r\nclass Observe{\r\n    constructor(data){\r\n        \r\n        Object.defineProperty(data, '__ob__',{\r\n            // 此处this指的是observer的实例\r\n            // 自定义的__ob__不可枚举\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n        if(Array.isArray(data)){\r\n            data.__proto__ = newArrayProto\r\n            this.observerArray(data)\r\n        }else{\r\n            this.walk(data);\r\n        }  \r\n    }\r\n    walk(data){  // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observerArray(data){\r\n        // 观测数组\r\n        data.forEach(item=>observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value){\r\n    observe(value)  // 对所有的对象都进行属性劫持\r\n    Object.defineProperty(target,key,{\r\n        get(){ // 取值的时候执行get\r\n            return value\r\n        },\r\n        set(newValue){ // 修改的时候执行set\r\n            if(newValue === value) return\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n    // 对象数据劫持方法\r\n\r\n    if (typeof data !== 'object' || data == null){\r\n        return  // 只对对象劫持\r\n    }\r\n    if(data.__ob__ instanceof Observe){\r\n        // 说明对象被监测过\r\n        return data.__ob__\r\n    }\r\n    // console.log(data, \"数据劫持\")\r\n    return new Observe(data)\r\n}","import { observe } from './observe/index'\r\n\r\nexport function initState(vm){ // 初始化状态\r\n    const opts = vm.$options\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    // 用来使用数据时能直接vm.data使用 \r\n    Object.defineProperty(vm, key,{\r\n        get(){\r\n            return vm[target][key]  // vm._data.name\r\n        },\r\n        set(newValue){\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data  // data可能是函数或者数据\r\n    data =  typeof data === 'function' ? data.call(vm) : data\r\n    // console.log(data, '初始化数据')\r\n\r\n    vm._data = data  // 将返回的对象放到_data上\r\n    observe(data)  // 将data数据进行劫持\r\n\r\n    // 将vm._data 用vm来代理\r\n    for(let key in data){\r\n        proxy(vm, '_data', key)\r\n    }\r\n    \r\n}","import { compileToFunction } from './compiler'\r\nimport { initState } from './state'\r\n\r\n\r\nexport function initMixin(Vue){ // 给Vue增加init方法\r\n    Vue.prototype._init = function(option){  // 用于初始化操作\r\n        const vm = this\r\n        vm.$options = option  // 将用户数据选项挂载在实例上\r\n\r\n        initState(vm)  // 初始化状态\r\n\r\n        if(option.el){\r\n            vm.$mount(option.el)  // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el){\r\n        // 判断用户用何种方式进行的挂载\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if(!ops.render){  // 先判断是否有render函数\r\n            let template;  // 没有render函数看是否写了template,没有就用外部的template\r\n            if(!ops.template && el){\r\n                template = el.outerHTML\r\n            }else{\r\n                if(el){  // 如果有el,则采用模板的内容\r\n                    template = ops.template\r\n                }\r\n            }\r\n            if(template){\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n\r\n        ops.render  // 最终都可以获取render方法\r\n    }\r\n}\r\n","import { initMixin } from './init'\r\n\r\nfunction Vue(option){\r\n    this._init(option)\r\n}\r\n\r\ninitMixin(Vue)  // 扩展了init方法\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ElEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","console","log","compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observerArray","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","option","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}